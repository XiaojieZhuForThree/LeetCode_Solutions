package problems;

import java.util.Arrays;
import java.util.PriorityQueue;

public class Question1353 {
	class Solution {
		public int maxEvents(int[][] events) {
			PriorityQueue<Integer> pq = new PriorityQueue<>();
			Arrays.sort(events, (a, b) -> a[0] - b[0]);
			int i = 0, res = 0, n = events.length;
			for (int d = 0; d <= 100000; d++) {
				while (i < n && events[i][0] == d) {
					pq.offer(events[i++][1]);
				}
				while (pq.size() > 0 && pq.peek() < d) {
					pq.poll();
				}
				if (!pq.isEmpty()) {
					pq.poll();
					res++;
				}
				if (pq.isEmpty() && i >= n) {
					break;
				}
			}
			return res;
		}
	}
}


#include <vector>
#include <queue>
#include <algorithm>
using std::vector;

class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        std::priority_queue<int, vector<int>, std::greater<int>> pq;
        sort(events.begin(), events.end());
        int i = 0, ans = 0, n = events.size();
        for (int d = 1; d <= 100000; d++) {
            while (pq.size() && pq.top() < d) pq.pop();
            while (i < n && events[i][0] == d) {
                pq.push(events[i][1]);
                i++;
            }
            if (pq.size()) {
                pq.pop();
                ans++;
            }
        }
        return ans;
    }
};
